<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Mint New NFT</title>
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css" />
    <!-- <script src="../javascripts/minterButton.js"></script> -->
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Raleway"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
      integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
      integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
    <script src="https://unpkg.com/moralis/dist/moralis.js"></script>
    <script
      src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js"
      type="application/javascript"
    ></script>
    <!-- <script src="./publish.js"></script> -->
    <style>
      body,
      html {
        height: 100vh;
      }

      * {
        box-sizing: border-box;
      }

      .bg-img {
        /* The image used */
        background-image: url("https://images.unsplash.com/photo-1639152201720-5e536d254d81?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80");
        height: 100vh;
        background-attachment: fixed;
        /* Control the height of the image */
        min-height: 380px;
        height: 100%;
        /* Center and scale the image nicely */
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        position: relative;
      }

      input[type="text"]:focus,
      input[type="password"]:focus {
        background-color: #ddd;
        outline: none;
      }

      .center {
        /* margin-top: 20px; */
        margin: auto;
        width: 50rem;
        padding: 10px;
        /* opacity: 0.8; */
      }

      .btn-center {
        margin: auto;
        width: 5rem;
        padding: 10px;
      }

      .btn:hover {
        opacity: 1;
      }

      .form {
        background-color: #205375;
      }

      .w3-bar .w3-button {
        padding: 16px;
        /* margin-bottom: 20px; */
      }
    </style>
  </head>
  <body class="bg-img">
    <div class="w3-top w3-margin-bottom">
      <div class="w3-bar w3-white w3-card" id="myNavbar">
        <a href="/" class="w3-bar-item w3-button w3-wide">EROS-ANTEROS</a>
        <!-- Right-sided navbar links -->
        <div class="w3-right w3-hide-small">
          <!-- <a href="#about" class="w3-bar-item w3-button">ABOUT</a> -->
          <!-- <!-- <a href="#team" class="w3-bar-item w3-button"
            ><i class="fa fa-user"></i> TEAM</a
          > -->
          <a href="/transfer" class="w3-bar-item w3-button">TRANSFER NFTs</a>
          <!-- <a href="/newProducts" class="w3-bar-item w3-button">GENRATE QRs</a> -->
        </div>
        <!-- Hide right-floated links on small screens and replace them with a menu icon -->

        <a
          href="javascript:void(0)"
          class="w3-bar-item w3-button w3-right w3-hide-large w3-hide-medium"
          onclick="w3_open()"
        >
          <i class="fa fa-bars"></i>
        </a>
      </div>
    </div>

    <!-- <div
      class="center container d-flex justify-content-center align-items-center mt-5 mb-5"
    > -->
    <div
      class="center row mt-5 d-flex align-items-center"
      style="padding-top: 60px"
    >
      <div
        id="mainDiv"
        class="col-md-4 offset-md-6 col-xl-10 offset-xl-1"
        style="display: flex"
      >
        <div class="card shadow">
          <img
            id="image"
            src="https://images.unsplash.com/photo-1642104704074-907c0698cbd9?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fGV0aGVyZXVtfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=600&q=60"
            alt=""
            class="card-img-top"
          />
          <div id="card" class="card-body">
            <h5 class="card-title mb-3 text-center">NFT Mint Form</h5>
            <div class="d-flex justify-content-center mb-3 mt-3">
              <button
                class="w3-button w3-deep-orange w3-padding-large"
                id="marimba"
              >
                Login metamask
              </button>
            </div>
            <form
              action="/newProducts"
              method="POST"
              class="needs-validation"
              novalidate
            >
              <div class="mb-3">
                <label class="form-label" for="companyName">Company Name</label>
                <input
                  class="form-control"
                  type="text"
                  id="companyName"
                  name="companyName"
                  required
                  autofocus
                />
                <div class="valid-feedback">Looks good!</div>
              </div>
              <div class="mb-3">
                <label class="form-label" for="NFTprojectName"
                  >Name of the NFT Series</label
                >
                <input
                  class="form-control"
                  type="text"
                  id="NFTprojectName"
                  name="NFTprojectName"
                  required
                />
                <div class="valid-feedback">Looks good!</div>
              </div>
              <div class="mb-3">
                <label class="form-label" for="NFTtokenName"
                  >Name of NFT token</label
                >
                <input
                  class="form-control"
                  type="text"
                  id="NFTtokenName"
                  name="NFTtokenName"
                  required
                />
                <div class="valid-feedback">Looks good!</div>
              </div>
              <div class="mb-3">
                <label class="form-label" for="noOfNFT"
                  >Number of NFTs to be minted</label
                >
                <input
                  class="form-control"
                  type="number"
                  id="noOfNFT"
                  name="noOfNFT"
                  required
                />
                <div class="valid-feedback">Looks good!</div>
              </div>

              <div class="mb-3">
                <label class="form-label" for="address"
                  >Your ETH-rinkeby address to recieve NFTs on</label
                >
                <input
                  class="form-control"
                  type="text"
                  id="address"
                  name="address"
                  required
                />
              </div>
              <div class="valid-feedback">Looks good!</div>
              <div class="mb-3 mt-3">
                <label for="formFile" class="form-label"
                  >Upload the image of NFT you want</label
                >
                <input
                  class="form-control"
                  type="file"
                  id="formFile"
                  name="formFile"
                />
              </div>
              <div class="d-flex justify-content-center mb-3 mt-3">
                <button
                  id="publish"
                  class="w3-button w3-black w3-padding-large"
                  onclick="gogogo()"
                >
                  PUBLISH TO IPFS
                </button>
                <button
                  id="mint"
                  class="w3-button w3-black w3-padding-large"
                  onclick="mintNow()"
                  style="display: none"
                >
                  MINT
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- </div> -->

    <!-- <script></script> -->

    <!-- <script type="module">
      import { ethers } from "https://cdn.ethers.io/lib/ethers-5.2.esm.min.js";
    </script> -->
    <!-- <script type="text/javascript">
      console.log(abi);
    </script> -->
    <script type="module">
      const abi = [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "string",
              name: "uree",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "setApprovalForAll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenID",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uri",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ];

      const bytecode = {
        functionDebugData: {
          "@_155": {
            entryPoint: null,
            id: 155,
            parameterSlots: 2,
            returnSlots: 0,
          },
          "@_26": {
            entryPoint: null,
            id: 26,
            parameterSlots: 3,
            returnSlots: 0,
          },
          abi_decode_available_length_t_string_memory_ptr_fromMemory: {
            entryPoint: 319,
            id: null,
            parameterSlots: 3,
            returnSlots: 1,
          },
          abi_decode_t_string_memory_ptr_fromMemory: {
            entryPoint: 394,
            id: null,
            parameterSlots: 2,
            returnSlots: 1,
          },
          abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory:
            {
              entryPoint: 445,
              id: null,
              parameterSlots: 2,
              returnSlots: 3,
            },
          allocate_memory: {
            entryPoint: 630,
            id: null,
            parameterSlots: 1,
            returnSlots: 1,
          },
          allocate_unbounded: {
            entryPoint: 661,
            id: null,
            parameterSlots: 0,
            returnSlots: 1,
          },
          array_allocation_size_t_string_memory_ptr: {
            entryPoint: 671,
            id: null,
            parameterSlots: 1,
            returnSlots: 1,
          },
          copy_memory_to_memory: {
            entryPoint: 725,
            id: null,
            parameterSlots: 3,
            returnSlots: 0,
          },
          extract_byte_array_length: {
            entryPoint: 779,
            id: null,
            parameterSlots: 1,
            returnSlots: 1,
          },
          finalize_allocation: {
            entryPoint: 833,
            id: null,
            parameterSlots: 2,
            returnSlots: 0,
          },
          panic_error_0x22: {
            entryPoint: 887,
            id: null,
            parameterSlots: 0,
            returnSlots: 0,
          },
          panic_error_0x41: {
            entryPoint: 934,
            id: null,
            parameterSlots: 0,
            returnSlots: 0,
          },
          revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d:
            {
              entryPoint: 981,
              id: null,
              parameterSlots: 0,
              returnSlots: 0,
            },
          revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae:
            {
              entryPoint: 986,
              id: null,
              parameterSlots: 0,
              returnSlots: 0,
            },
          revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db:
            {
              entryPoint: 991,
              id: null,
              parameterSlots: 0,
              returnSlots: 0,
            },
          revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b:
            {
              entryPoint: 996,
              id: null,
              parameterSlots: 0,
              returnSlots: 0,
            },
          round_up_to_mul_of_32: {
            entryPoint: 1001,
            id: null,
            parameterSlots: 1,
            returnSlots: 1,
          },
        },
        generatedSources: [
          {
            ast: {
              nodeType: "YulBlock",
              src: "0:4422:11",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "102:326:11",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "112:75:11",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "length",
                                  nodeType: "YulIdentifier",
                                  src: "179:6:11",
                                },
                              ],
                              functionName: {
                                name: "array_allocation_size_t_string_memory_ptr",
                                nodeType: "YulIdentifier",
                                src: "137:41:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "137:49:11",
                            },
                          ],
                          functionName: {
                            name: "allocate_memory",
                            nodeType: "YulIdentifier",
                            src: "121:15:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "121:66:11",
                        },
                        variableNames: [
                          {
                            name: "array",
                            nodeType: "YulIdentifier",
                            src: "112:5:11",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "array",
                              nodeType: "YulIdentifier",
                              src: "203:5:11",
                            },
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "210:6:11",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "196:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "196:21:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "196:21:11",
                      },
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "226:27:11",
                        value: {
                          arguments: [
                            {
                              name: "array",
                              nodeType: "YulIdentifier",
                              src: "241:5:11",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "248:4:11",
                              type: "",
                              value: "0x20",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "237:3:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "237:16:11",
                        },
                        variables: [
                          {
                            name: "dst",
                            nodeType: "YulTypedName",
                            src: "230:3:11",
                            type: "",
                          },
                        ],
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "291:83:11",
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                  nodeType: "YulIdentifier",
                                  src: "293:77:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "293:79:11",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "293:79:11",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "src",
                                  nodeType: "YulIdentifier",
                                  src: "272:3:11",
                                },
                                {
                                  name: "length",
                                  nodeType: "YulIdentifier",
                                  src: "277:6:11",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "268:3:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "268:16:11",
                            },
                            {
                              name: "end",
                              nodeType: "YulIdentifier",
                              src: "286:3:11",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "265:2:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "265:25:11",
                        },
                        nodeType: "YulIf",
                        src: "262:112:11",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "src",
                              nodeType: "YulIdentifier",
                              src: "405:3:11",
                            },
                            {
                              name: "dst",
                              nodeType: "YulIdentifier",
                              src: "410:3:11",
                            },
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "415:6:11",
                            },
                          ],
                          functionName: {
                            name: "copy_memory_to_memory",
                            nodeType: "YulIdentifier",
                            src: "383:21:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "383:39:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "383:39:11",
                      },
                    ],
                  },
                  name: "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "src",
                      nodeType: "YulTypedName",
                      src: "75:3:11",
                      type: "",
                    },
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "80:6:11",
                      type: "",
                    },
                    {
                      name: "end",
                      nodeType: "YulTypedName",
                      src: "88:3:11",
                      type: "",
                    },
                  ],
                  returnVariables: [
                    {
                      name: "array",
                      nodeType: "YulTypedName",
                      src: "96:5:11",
                      type: "",
                    },
                  ],
                  src: "7:421:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "521:282:11",
                    statements: [
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "570:83:11",
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                  nodeType: "YulIdentifier",
                                  src: "572:77:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "572:79:11",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "572:79:11",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "offset",
                                      nodeType: "YulIdentifier",
                                      src: "549:6:11",
                                    },
                                    {
                                      kind: "number",
                                      nodeType: "YulLiteral",
                                      src: "557:4:11",
                                      type: "",
                                      value: "0x1f",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "545:3:11",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "545:17:11",
                                },
                                {
                                  name: "end",
                                  nodeType: "YulIdentifier",
                                  src: "564:3:11",
                                },
                              ],
                              functionName: {
                                name: "slt",
                                nodeType: "YulIdentifier",
                                src: "541:3:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "541:27:11",
                            },
                          ],
                          functionName: {
                            name: "iszero",
                            nodeType: "YulIdentifier",
                            src: "534:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "534:35:11",
                        },
                        nodeType: "YulIf",
                        src: "531:122:11",
                      },
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "662:27:11",
                        value: {
                          arguments: [
                            {
                              name: "offset",
                              nodeType: "YulIdentifier",
                              src: "682:6:11",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "676:5:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "676:13:11",
                        },
                        variables: [
                          {
                            name: "length",
                            nodeType: "YulTypedName",
                            src: "666:6:11",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "698:99:11",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "770:6:11",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "778:4:11",
                                  type: "",
                                  value: "0x20",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "766:3:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "766:17:11",
                            },
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "785:6:11",
                            },
                            {
                              name: "end",
                              nodeType: "YulIdentifier",
                              src: "793:3:11",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                            nodeType: "YulIdentifier",
                            src: "707:58:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "707:90:11",
                        },
                        variableNames: [
                          {
                            name: "array",
                            nodeType: "YulIdentifier",
                            src: "698:5:11",
                          },
                        ],
                      },
                    ],
                  },
                  name: "abi_decode_t_string_memory_ptr_fromMemory",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "offset",
                      nodeType: "YulTypedName",
                      src: "499:6:11",
                      type: "",
                    },
                    {
                      name: "end",
                      nodeType: "YulTypedName",
                      src: "507:3:11",
                      type: "",
                    },
                  ],
                  returnVariables: [
                    {
                      name: "array",
                      nodeType: "YulTypedName",
                      src: "515:5:11",
                      type: "",
                    },
                  ],
                  src: "448:355:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "950:1041:11",
                    statements: [
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "996:83:11",
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                  nodeType: "YulIdentifier",
                                  src: "998:77:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "998:79:11",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "998:79:11",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "dataEnd",
                                  nodeType: "YulIdentifier",
                                  src: "971:7:11",
                                },
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "980:9:11",
                                },
                              ],
                              functionName: {
                                name: "sub",
                                nodeType: "YulIdentifier",
                                src: "967:3:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "967:23:11",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "992:2:11",
                              type: "",
                              value: "96",
                            },
                          ],
                          functionName: {
                            name: "slt",
                            nodeType: "YulIdentifier",
                            src: "963:3:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "963:32:11",
                        },
                        nodeType: "YulIf",
                        src: "960:119:11",
                      },
                      {
                        nodeType: "YulBlock",
                        src: "1089:291:11",
                        statements: [
                          {
                            nodeType: "YulVariableDeclaration",
                            src: "1104:38:11",
                            value: {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "headStart",
                                      nodeType: "YulIdentifier",
                                      src: "1128:9:11",
                                    },
                                    {
                                      kind: "number",
                                      nodeType: "YulLiteral",
                                      src: "1139:1:11",
                                      type: "",
                                      value: "0",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "1124:3:11",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "1124:17:11",
                                },
                              ],
                              functionName: {
                                name: "mload",
                                nodeType: "YulIdentifier",
                                src: "1118:5:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1118:24:11",
                            },
                            variables: [
                              {
                                name: "offset",
                                nodeType: "YulTypedName",
                                src: "1108:6:11",
                                type: "",
                              },
                            ],
                          },
                          {
                            body: {
                              nodeType: "YulBlock",
                              src: "1189:83:11",
                              statements: [
                                {
                                  expression: {
                                    arguments: [],
                                    functionName: {
                                      name: "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                      nodeType: "YulIdentifier",
                                      src: "1191:77:11",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "1191:79:11",
                                  },
                                  nodeType: "YulExpressionStatement",
                                  src: "1191:79:11",
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1161:6:11",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "1169:18:11",
                                  type: "",
                                  value: "0xffffffffffffffff",
                                },
                              ],
                              functionName: {
                                name: "gt",
                                nodeType: "YulIdentifier",
                                src: "1158:2:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1158:30:11",
                            },
                            nodeType: "YulIf",
                            src: "1155:117:11",
                          },
                          {
                            nodeType: "YulAssignment",
                            src: "1286:84:11",
                            value: {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "headStart",
                                      nodeType: "YulIdentifier",
                                      src: "1342:9:11",
                                    },
                                    {
                                      name: "offset",
                                      nodeType: "YulIdentifier",
                                      src: "1353:6:11",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "1338:3:11",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "1338:22:11",
                                },
                                {
                                  name: "dataEnd",
                                  nodeType: "YulIdentifier",
                                  src: "1362:7:11",
                                },
                              ],
                              functionName: {
                                name: "abi_decode_t_string_memory_ptr_fromMemory",
                                nodeType: "YulIdentifier",
                                src: "1296:41:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1296:74:11",
                            },
                            variableNames: [
                              {
                                name: "value0",
                                nodeType: "YulIdentifier",
                                src: "1286:6:11",
                              },
                            ],
                          },
                        ],
                      },
                      {
                        nodeType: "YulBlock",
                        src: "1390:292:11",
                        statements: [
                          {
                            nodeType: "YulVariableDeclaration",
                            src: "1405:39:11",
                            value: {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "headStart",
                                      nodeType: "YulIdentifier",
                                      src: "1429:9:11",
                                    },
                                    {
                                      kind: "number",
                                      nodeType: "YulLiteral",
                                      src: "1440:2:11",
                                      type: "",
                                      value: "32",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "1425:3:11",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "1425:18:11",
                                },
                              ],
                              functionName: {
                                name: "mload",
                                nodeType: "YulIdentifier",
                                src: "1419:5:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1419:25:11",
                            },
                            variables: [
                              {
                                name: "offset",
                                nodeType: "YulTypedName",
                                src: "1409:6:11",
                                type: "",
                              },
                            ],
                          },
                          {
                            body: {
                              nodeType: "YulBlock",
                              src: "1491:83:11",
                              statements: [
                                {
                                  expression: {
                                    arguments: [],
                                    functionName: {
                                      name: "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                      nodeType: "YulIdentifier",
                                      src: "1493:77:11",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "1493:79:11",
                                  },
                                  nodeType: "YulExpressionStatement",
                                  src: "1493:79:11",
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1463:6:11",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "1471:18:11",
                                  type: "",
                                  value: "0xffffffffffffffff",
                                },
                              ],
                              functionName: {
                                name: "gt",
                                nodeType: "YulIdentifier",
                                src: "1460:2:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1460:30:11",
                            },
                            nodeType: "YulIf",
                            src: "1457:117:11",
                          },
                          {
                            nodeType: "YulAssignment",
                            src: "1588:84:11",
                            value: {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "headStart",
                                      nodeType: "YulIdentifier",
                                      src: "1644:9:11",
                                    },
                                    {
                                      name: "offset",
                                      nodeType: "YulIdentifier",
                                      src: "1655:6:11",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "1640:3:11",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "1640:22:11",
                                },
                                {
                                  name: "dataEnd",
                                  nodeType: "YulIdentifier",
                                  src: "1664:7:11",
                                },
                              ],
                              functionName: {
                                name: "abi_decode_t_string_memory_ptr_fromMemory",
                                nodeType: "YulIdentifier",
                                src: "1598:41:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1598:74:11",
                            },
                            variableNames: [
                              {
                                name: "value1",
                                nodeType: "YulIdentifier",
                                src: "1588:6:11",
                              },
                            ],
                          },
                        ],
                      },
                      {
                        nodeType: "YulBlock",
                        src: "1692:292:11",
                        statements: [
                          {
                            nodeType: "YulVariableDeclaration",
                            src: "1707:39:11",
                            value: {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "headStart",
                                      nodeType: "YulIdentifier",
                                      src: "1731:9:11",
                                    },
                                    {
                                      kind: "number",
                                      nodeType: "YulLiteral",
                                      src: "1742:2:11",
                                      type: "",
                                      value: "64",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "1727:3:11",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "1727:18:11",
                                },
                              ],
                              functionName: {
                                name: "mload",
                                nodeType: "YulIdentifier",
                                src: "1721:5:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1721:25:11",
                            },
                            variables: [
                              {
                                name: "offset",
                                nodeType: "YulTypedName",
                                src: "1711:6:11",
                                type: "",
                              },
                            ],
                          },
                          {
                            body: {
                              nodeType: "YulBlock",
                              src: "1793:83:11",
                              statements: [
                                {
                                  expression: {
                                    arguments: [],
                                    functionName: {
                                      name: "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                      nodeType: "YulIdentifier",
                                      src: "1795:77:11",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "1795:79:11",
                                  },
                                  nodeType: "YulExpressionStatement",
                                  src: "1795:79:11",
                                },
                              ],
                            },
                            condition: {
                              arguments: [
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1765:6:11",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "1773:18:11",
                                  type: "",
                                  value: "0xffffffffffffffff",
                                },
                              ],
                              functionName: {
                                name: "gt",
                                nodeType: "YulIdentifier",
                                src: "1762:2:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1762:30:11",
                            },
                            nodeType: "YulIf",
                            src: "1759:117:11",
                          },
                          {
                            nodeType: "YulAssignment",
                            src: "1890:84:11",
                            value: {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "headStart",
                                      nodeType: "YulIdentifier",
                                      src: "1946:9:11",
                                    },
                                    {
                                      name: "offset",
                                      nodeType: "YulIdentifier",
                                      src: "1957:6:11",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "1942:3:11",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "1942:22:11",
                                },
                                {
                                  name: "dataEnd",
                                  nodeType: "YulIdentifier",
                                  src: "1966:7:11",
                                },
                              ],
                              functionName: {
                                name: "abi_decode_t_string_memory_ptr_fromMemory",
                                nodeType: "YulIdentifier",
                                src: "1900:41:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1900:74:11",
                            },
                            variableNames: [
                              {
                                name: "value2",
                                nodeType: "YulIdentifier",
                                src: "1890:6:11",
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  name: "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "headStart",
                      nodeType: "YulTypedName",
                      src: "904:9:11",
                      type: "",
                    },
                    {
                      name: "dataEnd",
                      nodeType: "YulTypedName",
                      src: "915:7:11",
                      type: "",
                    },
                  ],
                  returnVariables: [
                    {
                      name: "value0",
                      nodeType: "YulTypedName",
                      src: "927:6:11",
                      type: "",
                    },
                    {
                      name: "value1",
                      nodeType: "YulTypedName",
                      src: "935:6:11",
                      type: "",
                    },
                    {
                      name: "value2",
                      nodeType: "YulTypedName",
                      src: "943:6:11",
                      type: "",
                    },
                  ],
                  src: "809:1182:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2038:88:11",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "2048:30:11",
                        value: {
                          arguments: [],
                          functionName: {
                            name: "allocate_unbounded",
                            nodeType: "YulIdentifier",
                            src: "2058:18:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2058:20:11",
                        },
                        variableNames: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "2048:6:11",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "2107:6:11",
                            },
                            {
                              name: "size",
                              nodeType: "YulIdentifier",
                              src: "2115:4:11",
                            },
                          ],
                          functionName: {
                            name: "finalize_allocation",
                            nodeType: "YulIdentifier",
                            src: "2087:19:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2087:33:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2087:33:11",
                      },
                    ],
                  },
                  name: "allocate_memory",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "size",
                      nodeType: "YulTypedName",
                      src: "2022:4:11",
                      type: "",
                    },
                  ],
                  returnVariables: [
                    {
                      name: "memPtr",
                      nodeType: "YulTypedName",
                      src: "2031:6:11",
                      type: "",
                    },
                  ],
                  src: "1997:129:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2172:35:11",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "2182:19:11",
                        value: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2198:2:11",
                              type: "",
                              value: "64",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "2192:5:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2192:9:11",
                        },
                        variableNames: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "2182:6:11",
                          },
                        ],
                      },
                    ],
                  },
                  name: "allocate_unbounded",
                  nodeType: "YulFunctionDefinition",
                  returnVariables: [
                    {
                      name: "memPtr",
                      nodeType: "YulTypedName",
                      src: "2165:6:11",
                      type: "",
                    },
                  ],
                  src: "2132:75:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2280:241:11",
                    statements: [
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "2385:22:11",
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: "panic_error_0x41",
                                  nodeType: "YulIdentifier",
                                  src: "2387:16:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "2387:18:11",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "2387:18:11",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "2357:6:11",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2365:18:11",
                              type: "",
                              value: "0xffffffffffffffff",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "2354:2:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2354:30:11",
                        },
                        nodeType: "YulIf",
                        src: "2351:56:11",
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "2417:37:11",
                        value: {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "2447:6:11",
                            },
                          ],
                          functionName: {
                            name: "round_up_to_mul_of_32",
                            nodeType: "YulIdentifier",
                            src: "2425:21:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2425:29:11",
                        },
                        variableNames: [
                          {
                            name: "size",
                            nodeType: "YulIdentifier",
                            src: "2417:4:11",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "2491:23:11",
                        value: {
                          arguments: [
                            {
                              name: "size",
                              nodeType: "YulIdentifier",
                              src: "2503:4:11",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2509:4:11",
                              type: "",
                              value: "0x20",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "2499:3:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2499:15:11",
                        },
                        variableNames: [
                          {
                            name: "size",
                            nodeType: "YulIdentifier",
                            src: "2491:4:11",
                          },
                        ],
                      },
                    ],
                  },
                  name: "array_allocation_size_t_string_memory_ptr",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "2264:6:11",
                      type: "",
                    },
                  ],
                  returnVariables: [
                    {
                      name: "size",
                      nodeType: "YulTypedName",
                      src: "2275:4:11",
                      type: "",
                    },
                  ],
                  src: "2213:308:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2576:258:11",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "2586:10:11",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2595:1:11",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "i",
                            nodeType: "YulTypedName",
                            src: "2590:1:11",
                            type: "",
                          },
                        ],
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "2655:63:11",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        name: "dst",
                                        nodeType: "YulIdentifier",
                                        src: "2680:3:11",
                                      },
                                      {
                                        name: "i",
                                        nodeType: "YulIdentifier",
                                        src: "2685:1:11",
                                      },
                                    ],
                                    functionName: {
                                      name: "add",
                                      nodeType: "YulIdentifier",
                                      src: "2676:3:11",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "2676:11:11",
                                  },
                                  {
                                    arguments: [
                                      {
                                        arguments: [
                                          {
                                            name: "src",
                                            nodeType: "YulIdentifier",
                                            src: "2699:3:11",
                                          },
                                          {
                                            name: "i",
                                            nodeType: "YulIdentifier",
                                            src: "2704:1:11",
                                          },
                                        ],
                                        functionName: {
                                          name: "add",
                                          nodeType: "YulIdentifier",
                                          src: "2695:3:11",
                                        },
                                        nodeType: "YulFunctionCall",
                                        src: "2695:11:11",
                                      },
                                    ],
                                    functionName: {
                                      name: "mload",
                                      nodeType: "YulIdentifier",
                                      src: "2689:5:11",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "2689:18:11",
                                  },
                                ],
                                functionName: {
                                  name: "mstore",
                                  nodeType: "YulIdentifier",
                                  src: "2669:6:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "2669:39:11",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "2669:39:11",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "2616:1:11",
                            },
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "2619:6:11",
                            },
                          ],
                          functionName: {
                            name: "lt",
                            nodeType: "YulIdentifier",
                            src: "2613:2:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2613:13:11",
                        },
                        nodeType: "YulForLoop",
                        post: {
                          nodeType: "YulBlock",
                          src: "2627:19:11",
                          statements: [
                            {
                              nodeType: "YulAssignment",
                              src: "2629:15:11",
                              value: {
                                arguments: [
                                  {
                                    name: "i",
                                    nodeType: "YulIdentifier",
                                    src: "2638:1:11",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "2641:2:11",
                                    type: "",
                                    value: "32",
                                  },
                                ],
                                functionName: {
                                  name: "add",
                                  nodeType: "YulIdentifier",
                                  src: "2634:3:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "2634:10:11",
                              },
                              variableNames: [
                                {
                                  name: "i",
                                  nodeType: "YulIdentifier",
                                  src: "2629:1:11",
                                },
                              ],
                            },
                          ],
                        },
                        pre: {
                          nodeType: "YulBlock",
                          src: "2609:3:11",
                          statements: [],
                        },
                        src: "2605:113:11",
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "2752:76:11",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        name: "dst",
                                        nodeType: "YulIdentifier",
                                        src: "2802:3:11",
                                      },
                                      {
                                        name: "length",
                                        nodeType: "YulIdentifier",
                                        src: "2807:6:11",
                                      },
                                    ],
                                    functionName: {
                                      name: "add",
                                      nodeType: "YulIdentifier",
                                      src: "2798:3:11",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "2798:16:11",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "2816:1:11",
                                    type: "",
                                    value: "0",
                                  },
                                ],
                                functionName: {
                                  name: "mstore",
                                  nodeType: "YulIdentifier",
                                  src: "2791:6:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "2791:27:11",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "2791:27:11",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "2733:1:11",
                            },
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "2736:6:11",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "2730:2:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2730:13:11",
                        },
                        nodeType: "YulIf",
                        src: "2727:101:11",
                      },
                    ],
                  },
                  name: "copy_memory_to_memory",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "src",
                      nodeType: "YulTypedName",
                      src: "2558:3:11",
                      type: "",
                    },
                    {
                      name: "dst",
                      nodeType: "YulTypedName",
                      src: "2563:3:11",
                      type: "",
                    },
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "2568:6:11",
                      type: "",
                    },
                  ],
                  src: "2527:307:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2891:269:11",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "2901:22:11",
                        value: {
                          arguments: [
                            {
                              name: "data",
                              nodeType: "YulIdentifier",
                              src: "2915:4:11",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2921:1:11",
                              type: "",
                              value: "2",
                            },
                          ],
                          functionName: {
                            name: "div",
                            nodeType: "YulIdentifier",
                            src: "2911:3:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2911:12:11",
                        },
                        variableNames: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "2901:6:11",
                          },
                        ],
                      },
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "2932:38:11",
                        value: {
                          arguments: [
                            {
                              name: "data",
                              nodeType: "YulIdentifier",
                              src: "2962:4:11",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2968:1:11",
                              type: "",
                              value: "1",
                            },
                          ],
                          functionName: {
                            name: "and",
                            nodeType: "YulIdentifier",
                            src: "2958:3:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2958:12:11",
                        },
                        variables: [
                          {
                            name: "outOfPlaceEncoding",
                            nodeType: "YulTypedName",
                            src: "2936:18:11",
                            type: "",
                          },
                        ],
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "3009:51:11",
                          statements: [
                            {
                              nodeType: "YulAssignment",
                              src: "3023:27:11",
                              value: {
                                arguments: [
                                  {
                                    name: "length",
                                    nodeType: "YulIdentifier",
                                    src: "3037:6:11",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "3045:4:11",
                                    type: "",
                                    value: "0x7f",
                                  },
                                ],
                                functionName: {
                                  name: "and",
                                  nodeType: "YulIdentifier",
                                  src: "3033:3:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "3033:17:11",
                              },
                              variableNames: [
                                {
                                  name: "length",
                                  nodeType: "YulIdentifier",
                                  src: "3023:6:11",
                                },
                              ],
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "outOfPlaceEncoding",
                              nodeType: "YulIdentifier",
                              src: "2989:18:11",
                            },
                          ],
                          functionName: {
                            name: "iszero",
                            nodeType: "YulIdentifier",
                            src: "2982:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2982:26:11",
                        },
                        nodeType: "YulIf",
                        src: "2979:81:11",
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "3112:42:11",
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: "panic_error_0x22",
                                  nodeType: "YulIdentifier",
                                  src: "3126:16:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "3126:18:11",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "3126:18:11",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "outOfPlaceEncoding",
                              nodeType: "YulIdentifier",
                              src: "3076:18:11",
                            },
                            {
                              arguments: [
                                {
                                  name: "length",
                                  nodeType: "YulIdentifier",
                                  src: "3099:6:11",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "3107:2:11",
                                  type: "",
                                  value: "32",
                                },
                              ],
                              functionName: {
                                name: "lt",
                                nodeType: "YulIdentifier",
                                src: "3096:2:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "3096:14:11",
                            },
                          ],
                          functionName: {
                            name: "eq",
                            nodeType: "YulIdentifier",
                            src: "3073:2:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3073:38:11",
                        },
                        nodeType: "YulIf",
                        src: "3070:84:11",
                      },
                    ],
                  },
                  name: "extract_byte_array_length",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "data",
                      nodeType: "YulTypedName",
                      src: "2875:4:11",
                      type: "",
                    },
                  ],
                  returnVariables: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "2884:6:11",
                      type: "",
                    },
                  ],
                  src: "2840:320:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3209:238:11",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "3219:58:11",
                        value: {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "3241:6:11",
                            },
                            {
                              arguments: [
                                {
                                  name: "size",
                                  nodeType: "YulIdentifier",
                                  src: "3271:4:11",
                                },
                              ],
                              functionName: {
                                name: "round_up_to_mul_of_32",
                                nodeType: "YulIdentifier",
                                src: "3249:21:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "3249:27:11",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "3237:3:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3237:40:11",
                        },
                        variables: [
                          {
                            name: "newFreePtr",
                            nodeType: "YulTypedName",
                            src: "3223:10:11",
                            type: "",
                          },
                        ],
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "3388:22:11",
                          statements: [
                            {
                              expression: {
                                arguments: [],
                                functionName: {
                                  name: "panic_error_0x41",
                                  nodeType: "YulIdentifier",
                                  src: "3390:16:11",
                                },
                                nodeType: "YulFunctionCall",
                                src: "3390:18:11",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "3390:18:11",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "newFreePtr",
                                  nodeType: "YulIdentifier",
                                  src: "3331:10:11",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "3343:18:11",
                                  type: "",
                                  value: "0xffffffffffffffff",
                                },
                              ],
                              functionName: {
                                name: "gt",
                                nodeType: "YulIdentifier",
                                src: "3328:2:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "3328:34:11",
                            },
                            {
                              arguments: [
                                {
                                  name: "newFreePtr",
                                  nodeType: "YulIdentifier",
                                  src: "3367:10:11",
                                },
                                {
                                  name: "memPtr",
                                  nodeType: "YulIdentifier",
                                  src: "3379:6:11",
                                },
                              ],
                              functionName: {
                                name: "lt",
                                nodeType: "YulIdentifier",
                                src: "3364:2:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "3364:22:11",
                            },
                          ],
                          functionName: {
                            name: "or",
                            nodeType: "YulIdentifier",
                            src: "3325:2:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3325:62:11",
                        },
                        nodeType: "YulIf",
                        src: "3322:88:11",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3426:2:11",
                              type: "",
                              value: "64",
                            },
                            {
                              name: "newFreePtr",
                              nodeType: "YulIdentifier",
                              src: "3430:10:11",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "3419:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3419:22:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3419:22:11",
                      },
                    ],
                  },
                  name: "finalize_allocation",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "memPtr",
                      nodeType: "YulTypedName",
                      src: "3195:6:11",
                      type: "",
                    },
                    {
                      name: "size",
                      nodeType: "YulTypedName",
                      src: "3203:4:11",
                      type: "",
                    },
                  ],
                  src: "3166:281:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3481:152:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3498:1:11",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3501:77:11",
                              type: "",
                              value:
                                "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "3491:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3491:88:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3491:88:11",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3595:1:11",
                              type: "",
                              value: "4",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3598:4:11",
                              type: "",
                              value: "0x22",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "3588:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3588:15:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3588:15:11",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3619:1:11",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3622:4:11",
                              type: "",
                              value: "0x24",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3612:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3612:15:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3612:15:11",
                      },
                    ],
                  },
                  name: "panic_error_0x22",
                  nodeType: "YulFunctionDefinition",
                  src: "3453:180:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3667:152:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3684:1:11",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3687:77:11",
                              type: "",
                              value:
                                "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "3677:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3677:88:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3677:88:11",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3781:1:11",
                              type: "",
                              value: "4",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3784:4:11",
                              type: "",
                              value: "0x41",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "3774:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3774:15:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3774:15:11",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3805:1:11",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3808:4:11",
                              type: "",
                              value: "0x24",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3798:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3798:15:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3798:15:11",
                      },
                    ],
                  },
                  name: "panic_error_0x41",
                  nodeType: "YulFunctionDefinition",
                  src: "3639:180:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "3914:28:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3931:1:11",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3934:1:11",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "3924:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3924:12:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "3924:12:11",
                      },
                    ],
                  },
                  name: "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                  nodeType: "YulFunctionDefinition",
                  src: "3825:117:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4037:28:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4054:1:11",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4057:1:11",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4047:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4047:12:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4047:12:11",
                      },
                    ],
                  },
                  name: "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                  nodeType: "YulFunctionDefinition",
                  src: "3948:117:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4160:28:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4177:1:11",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4180:1:11",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4170:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4170:12:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4170:12:11",
                      },
                    ],
                  },
                  name: "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                  nodeType: "YulFunctionDefinition",
                  src: "4071:117:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4283:28:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4300:1:11",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4303:1:11",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4293:6:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4293:12:11",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4293:12:11",
                      },
                    ],
                  },
                  name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                  nodeType: "YulFunctionDefinition",
                  src: "4194:117:11",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4365:54:11",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "4375:38:11",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "4393:5:11",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "4400:2:11",
                                  type: "",
                                  value: "31",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "4389:3:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "4389:14:11",
                            },
                            {
                              arguments: [
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "4409:2:11",
                                  type: "",
                                  value: "31",
                                },
                              ],
                              functionName: {
                                name: "not",
                                nodeType: "YulIdentifier",
                                src: "4405:3:11",
                              },
                              nodeType: "YulFunctionCall",
                              src: "4405:7:11",
                            },
                          ],
                          functionName: {
                            name: "and",
                            nodeType: "YulIdentifier",
                            src: "4385:3:11",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4385:28:11",
                        },
                        variableNames: [
                          {
                            name: "result",
                            nodeType: "YulIdentifier",
                            src: "4375:6:11",
                          },
                        ],
                      },
                    ],
                  },
                  name: "round_up_to_mul_of_32",
                  nodeType: "YulFunctionDefinition",
                  parameters: [
                    {
                      name: "value",
                      nodeType: "YulTypedName",
                      src: "4348:5:11",
                      type: "",
                    },
                  ],
                  returnVariables: [
                    {
                      name: "result",
                      nodeType: "YulTypedName",
                      src: "4358:6:11",
                      type: "",
                    },
                  ],
                  src: "4317:102:11",
                },
              ],
            },
            contents:
              "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
            id: 11,
            language: "Yul",
            name: "#utility.yul",
          },
        ],
        linkReferences: {},
        object:
          "",
        opcodes:
          "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x30EA CODESIZE SUB DUP1 PUSH3 0x30EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1BD JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x8F JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6A SWAP3 SWAP2 SWAP1 PUSH3 0x8F JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x85 SWAP3 SWAP2 SWAP1 PUSH3 0x8F JUMP JUMPDEST POP POP POP POP PUSH3 0x3FA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x9D SWAP1 PUSH3 0x30B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xC1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x10D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xDC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x10D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x10D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x10C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xEF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x11C SWAP2 SWAP1 PUSH3 0x120 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x121 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x156 PUSH3 0x150 DUP5 PUSH3 0x29F JUMP JUMPDEST PUSH3 0x276 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x175 JUMPI PUSH3 0x174 PUSH3 0x3DA JUMP JUMPDEST JUMPDEST PUSH3 0x182 DUP5 DUP3 DUP6 PUSH3 0x2D5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1A2 JUMPI PUSH3 0x1A1 PUSH3 0x3D5 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1B4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH3 0x1D8 PUSH3 0x3E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1FA JUMPI PUSH3 0x1F9 PUSH3 0x3DF JUMP JUMPDEST JUMPDEST PUSH3 0x208 DUP7 DUP3 DUP8 ADD PUSH3 0x18A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x22C JUMPI PUSH3 0x22B PUSH3 0x3DF JUMP JUMPDEST JUMPDEST PUSH3 0x23A DUP7 DUP3 DUP8 ADD PUSH3 0x18A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x25E JUMPI PUSH3 0x25D PUSH3 0x3DF JUMP JUMPDEST JUMPDEST PUSH3 0x26C DUP7 DUP3 DUP8 ADD PUSH3 0x18A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x282 PUSH3 0x295 JUMP JUMPDEST SWAP1 POP PUSH3 0x290 DUP3 DUP3 PUSH3 0x341 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2BD JUMPI PUSH3 0x2BC PUSH3 0x3A6 JUMP JUMPDEST JUMPDEST PUSH3 0x2C8 DUP3 PUSH3 0x3E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2D8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x305 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x324 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x33B JUMPI PUSH3 0x33A PUSH3 0x377 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x34C DUP3 PUSH3 0x3E9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x36E JUMPI PUSH3 0x36D PUSH3 0x3A6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE0 DUP1 PUSH3 0x40A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xEAC989F8 EQ PUSH2 0x339 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A1 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x211A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x211A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH2 0x9E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0xA69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x422 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x432 JUMPI POP PUSH2 0x431 DUP3 PUSH2 0xCE1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP1 PUSH2 0x233E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C3 SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5EB PUSH2 0xDB7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x61A JUMPI POP PUSH2 0x619 DUP2 PUSH2 0x614 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST JUMPDEST PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x663 DUP4 DUP4 PUSH2 0xDBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x679 PUSH2 0x673 PUSH2 0xDB7 JUMP JUMPDEST DUP3 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C3 DUP4 DUP4 DUP4 PUSH2 0xF56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6DD SWAP1 PUSH2 0x2646 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7BA JUMPI PUSH2 0x6F9 DUP5 PUSH1 0x7 SLOAD PUSH2 0x11BD JUMP JUMPDEST PUSH2 0x78F PUSH1 0x7 SLOAD PUSH1 0x8 DUP1 SLOAD PUSH2 0x70C SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x738 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x785 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x75A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x785 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x768 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7A2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x7B2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6E5 JUMP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x886 SWAP1 PUSH2 0x22BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x95F SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x98B SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9F4 PUSH2 0x9ED PUSH2 0xDB7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x124F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA03 CALLER DUP4 DUP4 PUSH2 0xF56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA18 PUSH2 0xA12 PUSH2 0xDB7 JUMP JUMPDEST DUP4 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA63 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13BC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA74 DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAA SWAP1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xAD3 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAFF SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xB5D PUSH2 0x1418 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xB73 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xBB6 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xBA8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB90 SWAP3 SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0xBB1 DUP5 PUSH2 0x142F JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0xC5E SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC8A SWAP1 PUSH2 0x25E3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCD7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE32 DUP4 PUSH2 0x7E6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE83 DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB9 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECD DUP4 PUSH2 0x7E6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF0F JUMPI POP PUSH2 0xF0E DUP2 DUP6 PUSH2 0xBBB JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xF4D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF35 DUP5 PUSH2 0x4CB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF76 DUP3 PUSH2 0x7E6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x103C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1033 SWAP1 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1047 DUP4 DUP4 DUP4 PUSH2 0x14D6 JUMP JUMPDEST PUSH2 0x1052 PUSH1 0x0 DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10A2 SWAP2 SWAP1 PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11B8 DUP4 DUP4 DUP4 PUSH2 0x14DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11D7 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11E4 DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x1223 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121A SWAP1 PUSH2 0x22DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x124A SWAP3 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B5 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13AF SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13C7 DUP5 DUP5 DUP5 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x13D3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x1412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1409 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x143A DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x1479 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1470 SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1483 PUSH2 0x1418 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14CE JUMP JUMPDEST DUP1 PUSH2 0x14AD DUP5 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14BE SWAP3 SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14EA DUP4 DUP4 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152D SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A0D JUMP JUMPDEST ISZERO PUSH2 0x16C5 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1585 PUSH2 0xDB7 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15F2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1675 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1622 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1627 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x166D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1664 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x171A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x182E JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x174C JUMPI DUP1 DUP1 PUSH2 0x1735 SWAP1 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1745 SWAP2 SWAP1 PUSH2 0x24C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1767 PUSH2 0x277C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x179A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1827 JUMPI PUSH1 0x1 DUP3 PUSH2 0x17B3 SWAP2 SWAP1 PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x17C2 SWAP2 SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x30 PUSH2 0x17CE SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17E4 JUMPI PUSH2 0x17E3 PUSH2 0x274D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1820 SWAP2 SWAP1 PUSH2 0x24C8 JUMP JUMPDEST SWAP5 POP PUSH2 0x179E JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189A SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AC DUP2 PUSH2 0xD4B JUMP JUMPDEST ISZERO PUSH2 0x18EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E3 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18F8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1948 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A09 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1A3C SWAP1 PUSH2 0x25E3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1A5E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1AA5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1A77 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1AA5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1AA5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1AA4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A89 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1AB2 SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1AB7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE6 PUSH2 0x1AE1 DUP5 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x23D9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B02 JUMPI PUSH2 0x1B01 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST PUSH2 0x1B0D DUP5 DUP3 DUP6 PUSH2 0x25A1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B24 DUP2 PUSH2 0x2C4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B39 DUP2 PUSH2 0x2C65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B4E DUP2 PUSH2 0x2C7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B63 DUP2 PUSH2 0x2C7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x27AB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B8E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA6 DUP2 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC2 JUMPI PUSH2 0x1BC1 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BD0 DUP5 DUP3 DUP6 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI PUSH2 0x1BEF PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BFE DUP6 DUP3 DUP7 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C0F DUP6 DUP3 DUP7 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C32 JUMPI PUSH2 0x1C31 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C40 DUP7 DUP3 DUP8 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C51 DUP7 DUP3 DUP8 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C62 DUP7 DUP3 DUP8 ADD PUSH2 0x1B97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C86 JUMPI PUSH2 0x1C85 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C94 DUP8 DUP3 DUP9 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1CA5 DUP8 DUP3 DUP9 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CB6 DUP8 DUP3 DUP9 ADD PUSH2 0x1B97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD7 JUMPI PUSH2 0x1CD6 PUSH2 0x27B5 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE3 DUP8 DUP3 DUP9 ADD PUSH2 0x1B69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D06 JUMPI PUSH2 0x1D05 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D14 DUP6 DUP3 DUP7 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D25 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D46 JUMPI PUSH2 0x1D45 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D54 DUP6 DUP3 DUP7 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D65 DUP6 DUP3 DUP7 ADD PUSH2 0x1B97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D85 JUMPI PUSH2 0x1D84 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D93 DUP5 DUP3 DUP6 ADD PUSH2 0x1B3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB2 JUMPI PUSH2 0x1DB1 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x27BA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DED DUP5 DUP3 DUP6 ADD PUSH2 0x1B97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFF DUP2 PUSH2 0x252D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E0E DUP2 PUSH2 0x253F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1F DUP3 PUSH2 0x242F JUMP JUMPDEST PUSH2 0x1E29 DUP2 DUP6 PUSH2 0x2445 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E39 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B0 JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x27BF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E58 DUP3 PUSH2 0x243A JUMP JUMPDEST PUSH2 0x1E62 DUP2 DUP6 PUSH2 0x2456 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B0 JUMP JUMPDEST PUSH2 0x1E7B DUP2 PUSH2 0x27BF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E91 DUP3 PUSH2 0x243A JUMP JUMPDEST PUSH2 0x1E9B DUP2 DUP6 PUSH2 0x2467 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EAB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B0 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 PUSH1 0x32 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECF DUP3 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 PUSH1 0x25 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF2 DUP3 PUSH2 0x281F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0A PUSH1 0x1C DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F15 DUP3 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F2D PUSH1 0x24 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F38 DUP3 PUSH2 0x2897 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F50 PUSH1 0x19 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5B DUP3 PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F73 PUSH1 0x2C DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F7E DUP3 PUSH2 0x290F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F96 PUSH1 0x29 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA1 DUP3 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB9 PUSH1 0x38 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC4 DUP3 PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDC PUSH1 0x29 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE7 DUP3 PUSH2 0x29FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFF PUSH1 0x2E DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x200A DUP3 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2022 PUSH1 0x20 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x202D DUP3 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2045 PUSH1 0x31 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x2050 DUP3 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2068 PUSH1 0x2C DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x2073 DUP3 PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208B PUSH1 0x2F DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x2096 DUP3 PUSH2 0x2B61 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AE PUSH1 0x21 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B9 DUP3 PUSH2 0x2BB0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D1 PUSH1 0x31 DUP4 PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP PUSH2 0x20DC DUP3 PUSH2 0x2BFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F0 DUP2 PUSH2 0x2597 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2102 DUP3 DUP6 PUSH2 0x1E86 JUMP JUMPDEST SWAP2 POP PUSH2 0x210E DUP3 DUP5 PUSH2 0x1E86 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x214A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x2157 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x2164 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20E7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2176 DUP2 DUP5 PUSH2 0x1E14 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2196 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B6 DUP2 DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D7 DUP2 PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F7 DUP2 PUSH2 0x1EDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2217 DUP2 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2237 DUP2 PUSH2 0x1F20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2257 DUP2 PUSH2 0x1F43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2277 DUP2 PUSH2 0x1F66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2297 DUP2 PUSH2 0x1F89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B7 DUP2 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D7 DUP2 PUSH2 0x1FCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F7 DUP2 PUSH2 0x1FF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2317 DUP2 PUSH2 0x2015 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2337 DUP2 PUSH2 0x2038 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2357 DUP2 PUSH2 0x205B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2377 DUP2 PUSH2 0x207E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2397 DUP2 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B7 DUP2 PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E3 PUSH2 0x23F4 JUMP JUMPDEST SWAP1 POP PUSH2 0x23EF DUP3 DUP3 PUSH2 0x2615 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2419 JUMPI PUSH2 0x2418 PUSH2 0x277C JUMP JUMPDEST JUMPDEST PUSH2 0x2422 DUP3 PUSH2 0x27BF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247D DUP3 PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP PUSH2 0x2488 DUP4 PUSH2 0x2597 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x24BD JUMPI PUSH2 0x24BC PUSH2 0x26C0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP3 PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP PUSH2 0x24DE DUP4 PUSH2 0x2597 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24EE JUMPI PUSH2 0x24ED PUSH2 0x26EF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2504 DUP3 PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP PUSH2 0x250F DUP4 PUSH2 0x2597 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x26C0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 DUP3 PUSH2 0x2577 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25CE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25B3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x25DD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x271E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x261E DUP3 PUSH2 0x27BF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x263D JUMPI PUSH2 0x263C PUSH2 0x277C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2651 DUP3 PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2684 JUMPI PUSH2 0x2683 PUSH2 0x26C0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269A DUP3 PUSH2 0x2597 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A5 DUP4 PUSH2 0x2597 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26B5 JUMPI PUSH2 0x26B4 PUSH2 0x26EF JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E6578697374656E7420746F6B656E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2C57 DUP2 PUSH2 0x252D JUMP JUMPDEST DUP2 EQ PUSH2 0x2C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C6E DUP2 PUSH2 0x253F JUMP JUMPDEST DUP2 EQ PUSH2 0x2C79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C85 DUP2 PUSH2 0x254B JUMP JUMPDEST DUP2 EQ PUSH2 0x2C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C9C DUP2 PUSH2 0x2597 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DUP16 PUSH17 0x6518A65811200E309BB2E4AF81F40A7801 PUSH23 0x4E94BB61CE8067D6ADE65164736F6C6343000807003300 ",
        sourceMap:
          "206:663:0:-:0;;;298:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;379:4;385:6;1464:5:1;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;407:4:0::1;403:3;:8;;;;;;;;;;;;:::i;:::-;;298:123:::0;;;206:663;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:11:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:1182::-;927:6;935;943;992:2;980:9;971:7;967:23;963:32;960:119;;;998:79;;:::i;:::-;960:119;1139:1;1128:9;1124:17;1118:24;1169:18;1161:6;1158:30;1155:117;;;1191:79;;:::i;:::-;1155:117;1296:74;1362:7;1353:6;1342:9;1338:22;1296:74;:::i;:::-;1286:84;;1089:291;1440:2;1429:9;1425:18;1419:25;1471:18;1463:6;1460:30;1457:117;;;1493:79;;:::i;:::-;1457:117;1598:74;1664:7;1655:6;1644:9;1640:22;1598:74;:::i;:::-;1588:84;;1390:292;1742:2;1731:9;1727:18;1721:25;1773:18;1765:6;1762:30;1759:117;;;1795:79;;:::i;:::-;1759:117;1900:74;1966:7;1957:6;1946:9;1942:22;1900:74;:::i;:::-;1890:84;;1692:292;809:1182;;;;;:::o;1997:129::-;2031:6;2058:20;;:::i;:::-;2048:30;;2087:33;2115:4;2107:6;2087:33;:::i;:::-;1997:129;;;:::o;2132:75::-;2165:6;2198:2;2192:9;2182:19;;2132:75;:::o;2213:308::-;2275:4;2365:18;2357:6;2354:30;2351:56;;;2387:18;;:::i;:::-;2351:56;2425:29;2447:6;2425:29;:::i;:::-;2417:37;;2509:4;2503;2499:15;2491:23;;2213:308;;;:::o;2527:307::-;2595:1;2605:113;2619:6;2616:1;2613:13;2605:113;;;2704:1;2699:3;2695:11;2689:18;2685:1;2680:3;2676:11;2669:39;2641:2;2638:1;2634:10;2629:15;;2605:113;;;2736:6;2733:1;2730:13;2727:101;;;2816:1;2807:6;2802:3;2798:16;2791:27;2727:101;2576:258;2527:307;;;:::o;2840:320::-;2884:6;2921:1;2915:4;2911:12;2901:22;;2968:1;2962:4;2958:12;2989:18;2979:81;;3045:4;3037:6;3033:17;3023:27;;2979:81;3107:2;3099:6;3096:14;3076:18;3073:38;3070:84;;;3126:18;;:::i;:::-;3070:84;2891:269;2840:320;;;:::o;3166:281::-;3249:27;3271:4;3249:27;:::i;:::-;3241:6;3237:40;3379:6;3367:10;3364:22;3343:18;3331:10;3328:34;3325:62;3322:88;;;3390:18;;:::i;:::-;3322:88;3430:10;3426:2;3419:22;3209:238;3166:281;;:::o;3453:180::-;3501:77;3498:1;3491:88;3598:4;3595:1;3588:15;3622:4;3619:1;3612:15;3639:180;3687:77;3684:1;3677:88;3784:4;3781:1;3774:15;3808:4;3805:1;3798:15;3825:117;3934:1;3931;3924:12;3948:117;4057:1;4054;4047:12;4071:117;4180:1;4177;4170:12;4194:117;4303:1;4300;4293:12;4317:102;4358:6;4409:2;4405:7;4400:2;4393:5;4389:14;4385:28;4375:38;;4317:102;;;:::o;206:663:0:-;;;;;;;",
      };

      const serverUrl = "https://ubra4pvraqjm.usemoralis.com:2053/server";
      const appId = "NbWk1q1dkO9VkkhbOiYjAWENEUvFg7wEAUb5DA6V";
      Moralis.start({ serverUrl, appId });

      document.getElementById("marimba").addEventListener("click", login, true);
      document
        .getElementById("publish")
        .addEventListener("click", gogogo, true);
      //login function
      async function login() {
        Moralis.authenticate().then(function (user) {
          console.log(user.get("ethAddress"));
          //   console.log(abi);
        });
      }

      //upload an image
      const uploadImage = async () => {
        const data = formFile.files[0];
        const file = new Moralis.File(data.name, data);
        await file.saveIPFS();

        console.log(file.ipfs(), file.hash());

        return file.ipfs();
      };

      //upload the metadata object

      const uploadMetaData = async (imageURL) => {
        const object = {
          companyName: document.getElementById("companyName").value,
          NFT_series_name: document.getElementById("NFTprojectName").value,
          noOfNft: document.getElementById("noOfNFT").value,
          image: imageURL,
        };
        const file = new Moralis.File("file.json", {
          base64: btoa(JSON.stringify(object)),
        });
        await file.saveIPFS();
        console.log("FILE IPFs", file.ipfs(), "AND FILE HASH", file.hash());
        // var hashu = file.hash();
        // windows.hash = {
        //   value: hashu,
        // };
        // global.ipfsHash = file.hash();
        return file.ipfs();
      };

      //function to goooo
      // let ipfsMetaData ;
      async function gogogo() {
        const image = await uploadImage();
        const ipfs = await uploadMetaData(image);
        // document.getElementById("publish").style.display = "none";
        // document.getElementById("mint").style.display = "block";

        const name = document.getElementById("NFTprojectName").value;
        const symbol = document.getElementById("NFTtokenName").value;
        const noOfNft = document.getElementById("noOfNFT").value;
        const recieverAddress = document.getElementById("address").value;
        const provider = new ethers.providers.Web3Provider(
          window.ethereum,
          "rinkeby"
        );

        // await provider.send("eth_requestAccounts", []).then();
        const accounts = await provider.listAccounts();
        // console.log(accounts);

        const signer = provider.getSigner(accounts[0]);
        console.log(signer._address);

        const factory = new ethers.ContractFactory(abi, bytecode, signer);

        const contract = await factory.deploy(name, symbol, ipfs);
        // console.log(contract);
        const address = contract.address;
        console.log("Contract Address", address);
        const receipt = await contract.deployTransaction.wait();
        // console.log(receipt);

        const NFTea = new ethers.Contract(address, abi, signer);
        // NFTea.connect(signer);
        // console.log(NFTea);
        const tx = await NFTea.mint(recieverAddress, noOfNft);
        await tx.wait();
        console.log(tx);
        const tx2 = await NFTea.uri();

        console.log(tx2);
        console.log("MINTING DONE!! CONGRATULATIONS");
        const url = `http://localhost:3000/qr?contractAddress=${address}&tokenID=${1}&recieverAddress=${recieverAddress}`;
        window.location.assign(url);
        // document.getElementById("card").style.display = none;
        // const url = `https://api.qrserver.com/v1/create-qr-code/?data=localhost:3000/proof?contractAddress=${address}&tokenID=1&size=150x150`;
        // document.getElementById("image").src = url;
        // alert("NFT Minted!!!");
      }

      // };
    </script>
    <script>
      // Example starter JavaScript for disabling form submissions if there are invalid fields
      (function () {
        "use strict";

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll(".needs-validation");

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms).forEach(function (form) {
          form.addEventListener(
            "submit",
            function (event) {
              if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
              }

              form.classList.add("was-validated");
            },
            false
          );
        });
      })();
    </script>
    <script>
      // Modal Image Gallery
      function onClick(element) {
        document.getElementById("img01").src = element.src;
        document.getElementById("modal01").style.display = "block";
        var captionText = document.getElementById("caption");
        captionText.innerHTML = element.alt;
      }

      // Toggle between showing and hiding the sidebar when clicking the menu icon
      var mySidebar = document.getElementById("mySidebar");

      function w3_open() {
        if (mySidebar.style.display === "block") {
          mySidebar.style.display = "none";
        } else {
          mySidebar.style.display = "block";
        }
      }

      // Close the sidebar with the close button
      function w3_close() {
        mySidebar.style.display = "none";
      }
    </script>
  </body>
</html>
